#!/bin/bash
#-----------------------------
#
# If first argument is set to dev, it will install development dependencies as well as production dependencies.
#
#-----------------------------

if [ "$(id -u)" != "0" ]; then
    echo "Run this script as root!"
    exit 1
fi

dpkg --get-selections | grep composer | grep -v deinstall > /dev/null 2> /dev/null
if [ $? == "1" ]; then
    echo "Package composer can't be found!"
    exit 1
fi

dpkg --get-selections | grep npm | grep -v deinstall > /dev/null 2> /dev/null
if [ $? == "1" ]; then
    echo "Package npm can't be found!"
    exit 1
fi

COMPOSER_PARAMS=""
NPM_PARAMS=""
BOWER_PARAMS="--allow-root"

if [ "$1" != "dev" ]; then
    COMPOSER_PARAMS="--no-dev"
    NPM_PARAMS="--production"
    BOWER_PARAMS="$BOWER_PARAMS --production"
fi

echo "Installation of dependencies with composer ..."

echo "Running: composer install $COMPOSER_PARAMS"

composer install $COMPOSER_PARAMS

echo "... done."

echo "Installation of dependencies with npm ..."

echo "Running: npm install $NPM_PARAMS"

npm install $NPM_PARAMS

echo "... done."

echo "Installation of dependencies with bower ..."

echo "Running: node_modules/bower/bin/bower install $BOWER_PARAMS"

node_modules/bower/bin/bower install $BOWER_PARAMS

echo "... done."

CD="$(pwd)"

mathjax="vendor/mathjax/mathjax"
pmathjax="public/js/mathjax"

echo "Copying references to mathjax ..."
rm -rf "$CD/$pmathjax" 2> /dev/null > /dev/null
mkdir "$CD/$pmathjax" > /dev/null 2> /dev/null
ln -s "$CD/$mathjax/MathJax.js" "$CD/$pmathjax/MathJax.js"
ln -sd "$CD/$mathjax/config" "$CD/$pmathjax/config"
ln -sd "$CD/$mathjax/fonts" "$CD/$pmathjax/fonts"
ln -sd "$CD/$mathjax/extensions" "$CD/$pmathjax/extensions"
ln -sd "$CD/$mathjax/jax" "$CD/$pmathjax/jax"
ln -sd "$CD/$mathjax/localization" "$CD/$pmathjax/localization"
echo "... done."

highcharts="node_modules/highcharts"
phighcharts="public/js/highcharts"

echo "Copying references to highcharts ..."
rm -rf "$CD/$phighcharts" 2> /dev/null > /dev/null
mkdir "$CD/$phighcharts" > /dev/null 2> /dev/null
ln -s "$CD/$highcharts/highcharts.js" "$CD/$phighcharts/highcharts.js"
ln -s "$CD/$highcharts/highcharts-3d.js" "$CD/$phighcharts/highcharts-3d.js"
ln -s "$CD/$highcharts/highcharts-more.js" "$CD/$phighcharts/highcharts-more.js"
ln -s "$CD/$highcharts/highmaps.js" "$CD/$phighcharts/highmaps.js"
ln -s "$CD/$highcharts/highstock.js" "$CD/$phighcharts/highstock.js"
ln -sd "$CD/$highcharts/adapters" "$CD/$phighcharts/adapters"
ln -sd "$CD/$highcharts/css" "$CD/$phighcharts/css"
ln -sd "$CD/$highcharts/js" "$CD/$phighcharts/js"
ln -sd "$CD/$highcharts/lib" "$CD/$phighcharts/lib"
ln -sd "$CD/$highcharts/modules" "$CD/$phighcharts/modules"
ln -sd "$CD/$highcharts/themes" "$CD/$phighcharts/themes"
echo "... dobe."

prettify="bower_components/google-code-prettify/src"
pprettify="public/js/google-code-prettify"
pprettifycss="public/css"

echo "Copying references to google-code-prettify ..."
rm -f "$CD/$pprettify" 2> /dev/null > /dev/null
rm -f "$CD/$pprettifycss/prettify.css" 2> /dev/null > /dev/null
ln -sd "$CD/$prettify" "$CD/$pprettify"
ln -s "$CD/$prettify/prettify.css" "$CD/$pprettifycss/prettify.css"
echo "... done."
